# -*- coding: utf-8 -*-
"""M22MA003_Q3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1U0x-R02L-qbkeWYct8WbDprE0UIiYbGo
"""

import numpy as nump
import cv2
from google.colab.patches import cv2_imshow

input =  cv2.imread('circle-updated.png')
output = input.copy()
cv2_imshow(output)

def findValues(input):
  print(f"Shape of the INPUT image is {input.shape}")
  gray = cv2.cvtColor(input, cv2.COLOR_BGR2GRAY)
  gray = cv2.medianBlur(gray,5)
  circles = cv2.HoughCircles(gray, cv2.HOUGH_GRADIENT,1,20,
                             param1=70,param2=180,minRadius=0, maxRadius=0)
  detected_circles = nump.uint16(nump.around(circles))
  print(f"Number of circles detected are {len(detected_circles)}")
  for (x,y,r) in detected_circles[0,:]:
    cv2.circle(output , (x,y), r, (0,255,0), 3)
    print(f"Radius is {r}")
    print(f"Perimeter of circle in pixel unit is {2*nump.pi*r:.3f}")
    print(f"Area of circle in pixel units are {nump.pi*r*r:.3f}")
  cv2_imshow(output)

findValues(input)

