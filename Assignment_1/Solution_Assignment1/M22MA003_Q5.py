# -*- coding: utf-8 -*-
"""M22MA003_Q5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_oOwVUS94_E3ENdrsbsdaICYXaO1JIIs
"""

from google.colab.patches import cv2_imshow
import cv2
import numpy as np
import matplotlib.pyplot as plt
from pylab import rcParams
from IPython.display import Image
rcParams['figure.figsize']=8,16

img1 = cv2.imread('/content/Beaver_Lake_Montreal.jpg',1)
img1 = cv2.resize(img1, (256,256))
img1 = cv2.cvtColor(img1, cv2.COLOR_BGR2GRAY)
img2 = cv2.imread('/content/Beth_Shalom_Temple_Cuba.jpg',1)
img2 = cv2.resize(img2, (256,256))
img2 = cv2.cvtColor(img2, cv2.COLOR_BGR2GRAY)
img3 = cv2.imread('/content/Bodhi_Tree_Bodhgaya.jpg',1)
img3 = cv2.resize(img3, (256,256))
img3 = cv2.cvtColor(img3, cv2.COLOR_BGR2GRAY)
# print(type(img3))
cv2_imshow(img1)
cv2_imshow(img2)
cv2_imshow(img3)

avg_img = (img1+img2+img3)/3
cv2_imshow(avg_img)
# for i in range(256):

subtracted = cv2.subtract(img1, img2)
cv2_imshow(subtracted)

import random

def put_noise(image):
    x , y = image.shape
    temp = (0.05*x*y)
    count = round(temp)
    for _ in range(count):
        coord_x=random.randint(0, x-1)
        coord_y=random.randint(0, y-1)
        image[coord_x][coord_y] = 255
    return image

noisy_image=put_noise(img2)
cv2_imshow(put_noise(img2))
cv2.imwrite("Noisy_Output.jpg",noisy_image)

grayimage = cv2.cvtColor(noisy_image, cv2.COLOR_GRAY2BGR)
print("Grayimage done")
denoising = cv2.fastNlMeansDenoisingColored(grayimage, None, 10, 30,20, 20)
plt.subplot(121), plt.imshow(grayimage)
plt.subplot(122), plt.imshow(denoising)
plt.show()

kernel_val = np.array([[-1, -1, -1],
                       [0, 0, 0],
                       [1, 1, 1]])
final_image = cv2.filter2D(src=img1, ddepth=-1, kernel=kernel_val)
conv = np.hstack((img1,final_image))
cv2_imshow(conv)



