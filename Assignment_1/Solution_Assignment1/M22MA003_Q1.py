# -*- coding: utf-8 -*-
"""M22MA003_Q1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/148Pp-GLmauOV60razlrYDHL_icx-Uooj
"""

pip install image-slicer

import image_slicer as islicer
from google.colab.patches import cv2_imshow as cv2_show
from PIL import Image, ImageChops as chopper
import cv2 as ocv
import numpy as nump
import imutils as imut

org_image = Image.open(r"/content/Spot_the_difference.png")
org_image

islicer.slice('/content/Spot_the_difference.png', 2)

# Read the image
slice1 = Image.open(r"/content/Spot_the_difference_01_01.png")
slice2 = Image.open(r"/content/Spot_the_difference_01_02.png")
print(type(slice))
diff = chopper.difference(slice1, slice2)
diff



# print(img.shape)
# height = img.shape[0]
# width = img.shape[1]

# # Cut the image in half
# width_cutoff = width // 2
# s1 = img[:, :width_cutoff]
# s2 = img[:, width_cutoff:]
# #print(s1)
# new_image_s1=Image.fromarray(s1)
# new_image_s2=Image.fromarray(s2)
# diff = ImageChops.difference(new_image_s1, new_image_s2)
  
# showing the difference
#diff.show()

slice1 = ocv.imread("/content/Spot_the_difference_01_01.png")
# slice1 = cv2.resize(slice1, (400,360))
slice2 = ocv.imread("/content/Spot_the_difference_01_02.png")
# slice2 = cv2.resize(slice2, (400,360))
slicegray1 = ocv.cvtColor(slice1, ocv.COLOR_BGR2GRAY)
slicegray2 = ocv.cvtColor(slice2, ocv.COLOR_BGR2GRAY)

diff = ocv.absdiff(slicegray1,slicegray2)
cv2_show(diff)

thresh = ocv.threshold(diff, 0, 255, ocv.THRESH_BINARY | ocv.THRESH_OTSU)[1]
cv2_show(thresh)

kernel = nump.ones((4,4), nump.uint8)
dilate_image = ocv.dilate(thresh, kernel, iterations = 2)
cv2_show(dilate_image)

contours = ocv.findContours(dilate_image.copy(), ocv.RETR_EXTERNAL, ocv.CHAIN_APPROX_SIMPLE)
contours = imut.grab_contours(contours)
contours

for contour in contours:
  if ocv.contourArea(contour)>50:
    a,b,x,y = ocv.boundingRect(contour)
    ocv.rectangle(slice1, (a,b), (a+x, b+y), (0,0,255),3)
    ocv.rectangle(slice2, (a,b), (a+x, b+y), (0,0,255),3)
x = nump.zeros((360,10,3), nump.uint8)
result = nump.hstack((slice1, slice2))
cv2_show(result)





